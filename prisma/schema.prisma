generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String         @id @default(cuid())
  clerkId    String         @unique
  email      String         @unique
  firstName  String?
  lastName   String?
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt

  applications Application[]
}

model Application {
  id         String     @id @default(cuid())
  userId     String
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  // v1 fields
  firstName  String
  lastName   String
  email      String
  phone      String?
  dob        DateTime?
  address    String?
  ancestry   String?
  purpose    String
  signature  String?        // or future: signatureImageUrl (Blob)

  status     AppStatus  @default(DRAFT)
  submittedAt DateTime?
  updatedAt  DateTime   @updatedAt
  createdAt  DateTime   @default(now())

  // convenience
  attachments Attachment[]
  @@unique([userId])
  @@index([userId])
}

model Attachment {
  id            String   @id @default(cuid())
  applicationId String
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  kind          AttachmentKind
  url           String
  contentType   String
  size          Int
  createdAt     DateTime @default(now())

  // Optional descriptive name
  label         String?
}

enum AppStatus {
  DRAFT
  SUBMITTED
  UNDER_REVIEW
  APPROVED
  REJECTED
}

enum AttachmentKind {
  ID_PASSPORT
  BIRTH_CERT
  DRAWINGS
  PROOF_OF_ADDRESS
  OTHER
}
