/* eslint-disable jsx-a11y/alt-text */
import { prisma } from "@/lib/prisma";
import {
  pdf,
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Image,
} from "@react-pdf/renderer";

export const runtime = "nodejs";
const styles = StyleSheet.create({
  page: {
    padding: 40,
    fontSize: 12,
    fontFamily: "Helvetica",
    lineHeight: 1.5,
  },
  header: {
    alignItems: "center", // centers children horizontally
    marginBottom: 20,
    paddingBottom: 12,
    borderBottom: "2px solid #333",
  },
  logo: { width: 150, height: 80, marginBottom: 5 },
  headerText: {
    textAlign: "center",
    fontSize: 11,
    color: "#000",
    marginBottom: 2,
  },
  headerTitle: {
    textAlign: "center",
    fontSize: 16,
    fontWeight: "bold",
  },
  headerSubtitle: {
    textAlign: "center",
    fontSize: 14,
    fontWeight: "bold",
    marginTop: 2,
  },
  section: { marginTop: 16, marginBottom: 8 },
  sectionTitle: {
    fontSize: 14,
    fontWeight: "bold",
    marginBottom: 6,
    color: "#004080",
    textDecoration: "underline",
  },
  row: {
    marginBottom: 4,
    flexDirection: "row",
    justifyContent: "flex-start",
  },
  label: { fontWeight: "bold", marginRight: 6 },
  value: { flex: 1 },
  footer: {
    position: "absolute",
    bottom: 30,
    left: 40,
    right: 40,
    fontSize: 10,
    textAlign: "center",
    color: "#666",
    borderTop: "1px solid #ccc",
    paddingTop: 6,
  },
});

export async function GET(
  req: Request,
  { params }: { params: { id: string } }
) {
  const app = await prisma.application.findUnique({ where: { id: params.id } });
  if (!app) return new Response("Not Found", { status: 404 });

  const origin = new URL(req.url).origin;
  const logoUrl = `${origin}/logo.png`;

  const Doc = (
    <Document>
      <Page size="A4" style={styles.page}>
        {/* Header */}
        <View style={styles.header}>
          <Image src={logoUrl} style={styles.logo} />
          <Text style={styles.headerText}>
            Email: tbaycommonagecontact@gmail.com
          </Text>
          <Text style={styles.headerTitle}>TARPUM BAY COMMONAGE LAND</Text>
          <Text style={styles.headerSubtitle}>
            REGISTRATION / LAND APPLICATION
          </Text>
        </View>

        {/* Applicant Info */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Applicant Information</Text>
          <View style={styles.row}>
            <Text style={styles.label}>Name:</Text>
            <Text style={styles.value}>
              {app.firstName} {app.lastName}
            </Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>Email:</Text>
            <Text style={styles.value}>{app.email}</Text>
          </View>
          {app.phone && (
            <View style={styles.row}>
              <Text style={styles.label}>Phone:</Text>
              <Text style={styles.value}>{app.phone}</Text>
            </View>
          )}
          {app.dob && (
            <View style={styles.row}>
              <Text style={styles.label}>DOB:</Text>
              <Text style={styles.value}>
                {new Date(app.dob).toLocaleDateString()}
              </Text>
            </View>
          )}
          {app.address && (
            <View style={styles.row}>
              <Text style={styles.label}>Address:</Text>
              <Text style={styles.value}>{app.address}</Text>
            </View>
          )}
        </View>

        {/* Heritage */}
        {app.ancestry && (
          <View style={styles.section}>
            <Text style={styles.sectionTitle}>Heritage</Text>
            {app.ancestry.split("|").map((line, idx) => (
              <View key={idx} style={styles.row}>
                <Text style={styles.value}>{line.trim()}</Text>
              </View>
            ))}
          </View>
        )}

        {/* Purpose */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Purpose for Land</Text>
          <Text>{app.purpose}</Text>
        </View>

        {/* Submission Meta */}
        <View style={styles.section}>
          <Text style={styles.sectionTitle}>Submission Details</Text>
          <Text>Submitted: {new Date(app.createdAt).toLocaleString()}</Text>
          <Text>Application ID: {app.id}</Text>
        </View>

        {/* Footer */}
        <Text style={styles.footer}>
          Generated by Tarpum Bay Commonage Portal | This document is an
          official record of application
        </Text>
      </Page>
    </Document>
  );

  const pdfBuffer = await pdf(Doc).toBuffer();

  return new Response(pdfBuffer, {
    headers: {
      "Content-Type": "application/pdf",
      "Content-Disposition": `attachment; filename="application-${app.id}.pdf"`,
    },
  });
}
